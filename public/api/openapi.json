{
  "openapi": "3.0.0",
  "info": {
    "title": "FreeOpsDAO CRM API",
    "description": "MCP-ready CRM API for managing contacts, deals, and users with Web3 integration",
    "version": "1.0.0",
    "contact": {
      "name": "FreeOpsDAO",
      "url": "https://freeopsdao.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "summary": "List contacts",
        "description": "Retrieve a list of contacts with optional filtering",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter by contact type",
            "schema": {
              "type": "string",
              "enum": ["lead", "customer"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by contact status",
            "schema": {
              "type": "string",
              "enum": ["new", "qualified", "active", "inactive"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create contact",
        "description": "Create a new contact (lead or customer)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "description": "Contact with this email already exists"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Get contact",
        "description": "Retrieve a specific contact by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update contact",
        "description": "Update an existing contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete contact",
        "description": "Delete a contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/contacts/{id}/convert": {
      "put": {
        "summary": "Convert lead to customer",
        "description": "Convert a lead to a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact converted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/deals": {
      "get": {
        "summary": "List deals",
        "description": "Retrieve a list of deals",
        "responses": {
          "200": {
            "description": "List of deals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Deal"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create deal",
        "description": "Create a new deal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deal created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/deals/{id}": {
      "get": {
        "summary": "Get deal",
        "description": "Retrieve a specific deal by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deal details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update deal",
        "description": "Update an existing deal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deal updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete deal",
        "description": "Delete a deal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deal deleted"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List users",
        "description": "Retrieve a list of users (admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create user",
        "description": "Create a new user (admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List webhooks",
        "description": "Retrieve registered webhooks (not implemented)",
        "responses": {
          "501": {
            "description": "Not implemented"
          }
        }
      }
    },
    "/commands": {
      "post": {
        "summary": "Execute commands",
        "description": "Execute batch commands (not implemented)",
        "responses": {
          "501": {
            "description": "Not implemented"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "evm_address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "twitter_handle": {
            "type": "string"
          },
          "linkedin_profile": {
            "type": "string"
          },
          "telegram_username": {
            "type": "string"
          },
          "discord_username": {
            "type": "string"
          },
          "github_username": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contact_type": {
            "type": "string",
            "enum": ["lead", "customer"]
          },
          "contact_status": {
            "type": "string",
            "enum": ["new", "qualified", "active", "inactive"]
          },
          "source": {
            "type": "string"
          },
          "assigned_to": {
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "first_purchase_date": {
            "type": "string",
            "format": "date"
          },
          "total_purchases": {
            "type": "number"
          },
          "last_purchase_date": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "first_name", "last_name", "email", "contact_type", "contact_status"]
      },
      "ContactCreate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "evm_address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "twitter_handle": {
            "type": "string"
          },
          "linkedin_profile": {
            "type": "string"
          },
          "telegram_username": {
            "type": "string"
          },
          "discord_username": {
            "type": "string"
          },
          "github_username": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contact_type": {
            "type": "string",
            "enum": ["lead", "customer"],
            "default": "lead"
          },
          "contact_status": {
            "type": "string",
            "enum": ["new", "qualified", "active", "inactive"],
            "default": "new"
          },
          "source": {
            "type": "string"
          },
          "assigned_to": {
            "type": "integer"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": ["first_name", "last_name", "email"]
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "evm_address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "twitter_handle": {
            "type": "string"
          },
          "linkedin_profile": {
            "type": "string"
          },
          "telegram_username": {
            "type": "string"
          },
          "discord_username": {
            "type": "string"
          },
          "github_username": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contact_type": {
            "type": "string",
            "enum": ["lead", "customer"]
          },
          "contact_status": {
            "type": "string",
            "enum": ["new", "qualified", "active", "inactive"]
          },
          "source": {
            "type": "string"
          },
          "assigned_to": {
            "type": "integer"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "Deal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "contact_id": {
            "type": "integer"
          },
          "amount": {
            "type": "number"
          },
          "stage": {
            "type": "string",
            "enum": ["prospecting", "qualification", "proposal", "negotiation", "closed_won", "closed_lost"]
          },
          "probability": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "expected_close_date": {
            "type": "string",
            "format": "date"
          },
          "assigned_to": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "title", "contact_id", "stage", "probability"]
      },
      "DealCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "contact_id": {
            "type": "integer"
          },
          "amount": {
            "type": "number"
          },
          "stage": {
            "type": "string",
            "enum": ["prospecting", "qualification", "proposal", "negotiation", "closed_won", "closed_lost"],
            "default": "prospecting"
          },
          "probability": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 0
          },
          "expected_close_date": {
            "type": "string",
            "format": "date"
          },
          "assigned_to": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["title", "contact_id"]
      },
      "DealUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "contact_id": {
            "type": "integer"
          },
          "amount": {
            "type": "number"
          },
          "stage": {
            "type": "string",
            "enum": ["prospecting", "qualification", "proposal", "negotiation", "closed_won", "closed_lost"]
          },
          "probability": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "expected_close_date": {
            "type": "string",
            "format": "date"
          },
          "assigned_to": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"]
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "username", "email", "role", "is_active"]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"],
            "default": "user"
          }
        },
        "required": ["username", "email", "password"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "details": {
            "type": "string"
          }
        },
        "required": ["error", "code"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
} 